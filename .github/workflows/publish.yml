name: Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: true
        default: ''
env:
  PUBLISH_WIN_PATH: ./MkvDefaultSwitcher2/MkvDefaultSwitcher2.WinForms/bin/Release/net5.0-windows/win-x64/publish
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build Windows
      run: dotnet publish MkvDefaultSwitcher2/MkvDefaultSwitcher2.WinForms/MkvDefaultSwitcher2.WinForms.csproj --configuration Release  -r win-x64 -p:PublishSingleFile=true --self-contained true -p:PublishTrimmed=True -p:IncludeNativeLibrariesForSelfExtract=true -p:Version=${{ github.event.inputs.version }}
    - name: Zip releases
      run: |
        powershell Rename-Item $env:PUBLISH_WIN_PATH/MkvDefaultSwitcher2.WinForms.exe $env:PUBLISH_WIN_PATH/MkvDefaultSwitcher2-V${{ github.event.inputs.version }}.exe
        powershell Compress-Archive $env:PUBLISH_WIN_PATH/MkvDefaultSwitcher2-V${{ github.event.inputs.version }}.exe ./MkvDefaultSwitcher2-windows-V${{ github.event.inputs.version }}.zip
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: V${{ github.event.inputs.version }}
        release_name: V${{ github.event.inputs.version }}
        body: <TODO>
        draft: true
        prerelease: false
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./MkvDefaultSwitcher2-windows-V${{ github.event.inputs.version }}.zip
        asset_name: MkvDefaultSwitcher2-windows-V${{ github.event.inputs.version }}.zip
        asset_content_type: application/zip
    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
